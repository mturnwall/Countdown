/**
*   @class Countdown Object
*   @version 1.0
*   @description handles counting down from today's date to a date in future
*   @requires jQuery v1.3 or later
*   @author Michael Turnwall
*   
*   Copyright (c) 2011 Michael Turnwall
*   Released under a GPLv3 license.
*   <p>This program is free software: you can redistribute it and/or modify
*   it under the terms of the GNU General Public License as published by
*   the Free Software Foundation, either version 3 of the License, or
*   (at your option) any later version.</p>
*   
*   <p>This program is distributed in the hope that it will be useful,
*   but WITHOUT ANY WARRANTY; without even the implied warranty of
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*   GNU General Public License for more details.</p>
*   
*   <p>You should have received a copy of the GNU General Public License
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.</p>
*/
var Countdown={init:function(eventDate){var obj=this;this.$_timeContainers=$('.timerCont .timeValue span');this.timeValues=[];this.timer;this.pacificOffset=420;this.getTimeDifference(eventDate);this.writeTime(this.timeValues);},getTimeDifference:function(eventDate){var difference,endDate,oneDay,oneHour,oneMinute,oneSecond,startDate,values;values=[];oneDay=1000*60*60*24;oneHour=1000*60*60;oneMinute=1000*60;oneSecond=1000;endDate=new Date(eventDate[0],eventDate[1],eventDate[2]);startDate=new Date();difference=endDate.getTime()-(startDate.getTime()-this.findTimezone());this.timeValues.push(Math.ceil(difference/oneDay));this.timeValues.push(Math.ceil((difference%oneDay)/oneHour));this.timeValues.push(Math.ceil(((difference%oneDay)%oneHour)/oneMinute));this.timeValues.push(Math.ceil((((difference%oneDay)%oneHour)%oneMinute)/oneSecond));},findTimezone:function(){var now,currentZone;now=new Date();currentZone=now.getTimezoneOffset();if(currentZone==420){return 0;}
if(currentZone<0){currentZone=(currentZone*-1)+this.pacificOffset;}else if(currentZone<this.pacificOffset){currentZone=this.pacificOffset-currentZone;}else{currentZone=this.pacificOffset+currentZone;}
return currentZone*1000*60;},countTime:function(){var days=this.timeValues[0],hours=this.timeValues[1],mins=this.timeValues[2],secs=this.timeValues[3],time;if(secs>0){secs--;}else if(secs==0&&mins>0){secs=59;mins--;}else if(secs==0&&mins==0&&hours>0){if(mins==0&&hours>0){secs=59;mins=59;}
if(hours>1){hours--;}else if(hours==1&&days>0){hours=0;days--;}else{hours=0;}}
time=[days,hours,mins,secs];for(var i=time.length-1;i>=0;i--){this.timeValues[i]=time[i];};this.writeTime(time);},writeTime:function(values){var obj=this;this.$_timeContainers.each(function(i){(values[i].toString().length>1)?this.innerHTML=values[i]:this.innerHTML='0'+values[i];});if(values[0]!=0||values[1]!=0||values[2]!=0||values[3]!=0){this.timer=window.setTimeout(function(){obj.countTime();},1000);}else{return'Lets shuffle and deal!';}}};